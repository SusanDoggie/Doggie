on: [push, pull_request]
jobs:
  platform:
    name: macOS
    runs-on: macOS-latest
    strategy:
      matrix:
        sdk: [macosx, iphonesimulator, appletvsimulator]
        include:
          - sdk: macosx
            destination: 'platform=macOS'
          - sdk: iphonesimulator
            destination: 'platform=iOS Simulator,name=iPhone 11'
          - sdk: appletvsimulator
            destination: 'platform=tvOS Simulator,name=Apple TV 4K'
    steps:
    - uses: actions/checkout@master
    - run: |
        export XCODEBUILD_CONFIG="-configuration Release -sdk ${SDK}"
        export SCHEMES=$(xcodebuild -list | grep --after-context=-1 '^\s*Schemes:' | tail -n +2 | xargs)
        echo "available scheme: ${SCHEMES}"
      env: 
        SDK: ${{ matrix.sdk }}
    - name: Build
      run: |
        for SCHEME in ${SCHEMES}; do
          echo "Building scheme ${SCHEME}"
          xcodebuild ${XCODEBUILD_CONFIG} -scheme ${SCHEME} | xcpretty -f `xcpretty-travis-formatter`
        done
    - name: Run tests
      run: |
        for SCHEME in ${SCHEMES}; do
          echo "Testing scheme ${SCHEME}"
          xcodebuild ${XCODEBUILD_CONFIG} -scheme ${SCHEME} build-for-testing -skipUnavailableActions | xcpretty -f `xcpretty-travis-formatter`
          xcodebuild ${XCODEBUILD_CONFIG} -scheme ${SCHEME} -destination "${DESTINATION}" test-without-building -enableCodeCoverage ${ENABLE_CODECOV} -skipUnavailableActions | xcpretty -f `xcpretty-travis-formatter`
        done
      env: 
        DESTINATION: ${{ matrix.destination }}
  macos:
    name: macOS SwiftPM
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@master
    - name: Build
      run: swift build -c release
    - name: Run tests
      run: swift test -c release
  ubuntu:
    name: Ubuntu ${{ matrix.image }}
    container: 
      image: docker://swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [xenial, bionic]
    steps:
    - run: sudo -E apt-get -y -q install libz-dev
    - run: |
        export DEBIAN_FRONTEND=noninteractive
        echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
        apt-get install -y fontconfig ttf-mscorefonts-installer
    - uses: actions/checkout@master
    - name: Build
      run: swift build -c release
    - name: Run tests
      run: swift test -c release
